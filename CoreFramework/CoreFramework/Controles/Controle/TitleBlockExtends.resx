<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcb_action.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAD3UlEQVRYR72Xa2xTdRjGC9G5
        4mUBtlMiJMYLieInY6LBC5r4pYl+wRgSY3CG4AcosM3A0EJ2Q5eIxCWabGunG4uGZCzxEytzAXeRECRh
        DKSNdoPS3Vm77sa6bm33+D79t5ONLq625Ul+SdNz+v6e82/POT06yUMby2xnDMeaoZWdhVaaJmQ2HXTR
        SXEsjxvKmlFz1YfqK15YO9MDZ9NBF51KrZKTXWpDg2MChm+uYeO317EpxXAmZ9NBF51KraKtK7Gh+eY0
        ttb+jW0nnXi7PrVwJmfTQRedSq2iZRU1od0dwPYGNz5oTA+cTQdddCq1irbmaBMeVOiiU6lVtMwjqoDd
        bscNuwN2R2qJzJTZDF10KrXKQoHubiecPT1pgbOZjPgFzkQ2ulwuuG6708LtXnfEoSuK8yOMFejr60Vv
        f39qGehH3/AgBnzD+LOoGT3Hzi5fYGhwCINDwynkDu6MeOAdH8O1oy3o/aUPf51y4uqRRpbIUPp7Cng9
        IxjxeFKD14tRnw+TU1Oo/qEWFZZKOOu70WnpQkfFJVzOr1sooWWaVYHxMR98Y2PJMz6B8alp3J0No8pa
        j+s3HOiXr6H0eDn+OHEZLV+245KpmgXWRgo8Ei1wV9pOTiYJxf4g/GHg4v71+Om0De6BYbR1/A5LTQ0O
        lpjRtcdK+av3FQjM+DHtT4KZAGaC8wjIrPZ9G+S8LpShDnxf24hKSx0K8vJxqLCA8jeFTYL6CmIFQnNB
        zM7O/T/mQhA35MDRZhK58zDgvwm05gIWPQ58UY7PpIC+vIMFnonJmYUCwDzC4XDCzIs4llaTISq/BZzf
        BVStByofhfXjpyLb1xS3sMDi0/DfAsmldW88eRYqPnouugegj3cvSEWBlcgZuuhUapWkC6xUzqS8QCJy
        JqUFEpUzcQvoo5fiRHK/PFvIwnc7N0f3iB+66FRqFe0JuUUmkgv7ckQuF5lpOc8prxa5dR1Ofrolusfy
        oYtOpVbJ0Q6fusANbMclWkqGuQmrzL9CZ27DS3nFcLWIPOgBzu1Uy16j4WfTy1j1VScyi88jU061pTM4
        mw666FRqFf5Hf1F4S3jnPzB2VOX6gCmEbp1GyLZD5Nn4cf/rPCrjkn3jQQddi54L+JTCN9iKS7McG058
        8nTBxMWDwEADQldK0VX5XkzOazsvr/E+dy900LXoyWil0X++2zhXUrgLo7/loe7AlsCHW9cel/dfExZu
        LOnK6jKTMf/d7bnYs2Nb0GR8kuI3hOcFHlVa5Yz+UP7e0d3vv/K1vOZyvyBwSfXCaiHteUx4VtgsGIQH
        Jo7lYYElUizW6f4BlpaKMHikU6gAAAAASUVORK5CYII=
</value>
  </data>
</root>