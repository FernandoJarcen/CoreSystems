<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAwAPcAAGyMsnSStniVuHqXuXuYunyZu36avICcvYagwImjwYqkwoukwo2mw5CpxZWrx5eu
        yZmvyZqwyZuxyp6zzJ+1zaO3zqa50Ka60am70qu90q2+1K7A1bDB1bHC1rPE17XF2LfH2bjH2bvK27zL
        3L7M3cDN3sPQ38PQ4MbT4srW483Y5c7Z5dHb59Pd6NTd6Nbf6tjh6tvj7Nzk7eDn7+Ho7+Tq8efs8ujt
        8+ru9Ovw9e3x9vDz9/H0+PX3+vX4+vj5+/r7/Pv8/W6Os3KRtX2Zu4GdvYSfv4ahwIqjwpCoxZSrx5at
        yJmwypyxy6O3z6a50ai70au906y+1K/A1bPD17XF2bbF2LvJ273L3MHO3sLP38TR4MXS4cnU4s3X5dDa
        5tLc6NXe6djg6tri7Nzj7ePp8eft8+vv9O3x9fT2+ff5+/j6+/n6/HWTt3aUt42lw5KqxpWsx6C0za2/
        1LTF2LrJ2rzK28rV48vW5NDb59Pc6Nfg6tjh693k7eLo8Onu8+rv9Ozx9fL1+IKdvYiiwZOrx5uwyqe6
        0ai70qy+07LD1rfG2bnI2r3M3MLQ38bS4cjU4szX5M/a5t7m7uDm7uPp8Obr8u/y9/H09/P1+Yulw5Ss
        yKC1zaa60K6/1bDC1sDO3sfT4dbf6d/m7unt8/j6/HyZup2yzKK2zqS3z8LQ4MXS4OXr8evv9fb4+omi
        wZ+0zaq80r/N3cXR4M3X5N3l7eXq8enu9O7y9vT3+YKevpuxy6G2zqm80tni6+7x9vP1+AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh/i1NYWRlIGJ5IEtyYXNpbWlyYSBOZWpjaGV2YSAod3d3LmxvYWRp
        bmZvLm5ldCkAIfkEAQoAQgAsAAAAADAAMAAAB/+AQoKDhIWGQkA8PIeMjY6OLxMICBMvj5eYhSQBAJ0A
        ASSZoo4yA56eAjGjq4Uap6cZrLJBD6+eD0Gyhz0sHx0oOoUQtp0Qhjs3N4uiOBQGBNANloMixAAihD0x
        LtwvND+YPhQEA9ADAwo1gzoKtgrBgj/b3NwsNJgsBuXQ5AQdhDIYnGIwg9ANeghfLHP0gZ/DAQ/ADeKR
        QsOGFAsFzUBI74WNSx0cmoPYQ5QMjvU+PkLR7+GFURu7sXDB4gU8RzoanCtQgNyBFqN6vOD4QkamFwr6
        DTgwgpWOGCxqsohRMlONDg8aXHiRi1WPGjJk3JA4ykdVXWjTql2rdgaJDB3/MLIt5MPGixgzMgpZ4SCB
        3wQVbswV5IMFChMmUKTIMUhGAwUJGDDwe+GsWiAvUiDeLFdIh8kKFEyOPG2tDhQlDqNQbbRHhciwIyso
        MZfG5tsmWATpQcHv5N8JaLO1rTpxYt2eYQNnUFrtadyIVQlxnGDBgr+V5wZ5YRyx4oV8r0euoHJujxbF
        UwgmNKNEBg6dByOyAQNGXkZd5evf/wgIWbRB5CdKDiZwkAEJ98hyAwuJwaCXIzRYAMGEEEigAisyfADC
        BxqSsN4jPGRAIYURFMSMCBym+IEJPlzywogkhiJKLypyCII6j5gAI4UZAJEJEChsWKMHzTGSQgQ7QtCB
        qo+D/DBDVDMwKUgQKHhQo4bSkSJBkiYYVAIGGFyAAQk7EPLClRyW18gPIOxowU09iBDmBWJi8MFZPJBw
        ZQqZ6ADClhNmkKAgL1yQQZ0XWIBBlkLoYMIHHoAAwgqWPfKDDJq5oBcKdHaq6AUoFOIkDB4JqNYJYFpg
        AaIy8lcIC52GueoFLLhqCA4agFmnBRncZGtjGoi5agZG/WrIDSh8EAIKHxpryA9S6hIIACH5BAEKAAEA
        LAAAAAAwADAAAAf/gAGCg4SFhgFBaWmHjI2OjmNPSklPY4+XmIVcRgMDBANHXJmjjjNHngSpoDKkrYVV
        n6mqBFWutkFOqLKfTraMamIkVys7hU+6sgNPhWckUFEri5loUQwL1xNkhFmxyQRZhF9FQgBCQkllmGpR
        C0jXSEgQZoNoS52qA0togzJE5AAAASiR5kgMA3fX2iG5QqgMEyKymKQb9KRcQIBCvFwikbAjEidsCKVZ
        UaVKNEJqkFwMKCTKpSsdE35ckymNypXloFxa0S7mgg6kmvxjKQTcox0T4MFrl0QMqS9DVgopcgOTDAgK
        kSThEoRUkCpD/gkZ8GXUjStOnHSw5CrICiZG/5BAmeFqjRpfIu/i3cu3r6sbXKpcAUPQr6A1aMqUuUGT
        UBgnECIzmXLG8OEZYcK4cCGmmKAykCOL7qDX7wwwYcBsDiNG2hXRsJmw8rsjMxjVLlCnWwcbdhfDN1Cj
        Xv1FG+/ekX/7DY4685fbs7Egh9Bkdt80tr9kzjyRRmjYpC1jRq0dTOtBj2FTthxgjYzUmTsXAiz4S2HD
        QRLPONOYvf//vrDRH14hubLDCleEwMVErqAhBnSlXVJGB09AUaEUYbhSRhdcbLEFFyvsc0kaVUBhooXP
        MIgJGhx66CIYAzIig4lPVHiiKKPI4OKOW1T1yAoV1njiEyHE2EgQYGjB47OH1jXyhY00WohFV4OscYMY
        YpgRIxgd8sgFXY/QIIWNQUKh0SA7dGGFFSV1URgNWSi5IxciOsJGFkOa2IFn7W1hBRVsrslFf2qswEWX
        HjqFSRp4ohiCijNUseakJYEpyA5fcKHFoWFE+AgbZazgBRn3rTDpmlVQYVIhVspAQ51+mdpBSaiuCqAh
        YtRaq6K3ErLDFWxW0cGaV/DZ6yBlXEGrFVdYeiwhaGS6xRewPsuqka0EAgAh+QQBCgABACwAAAAAMAAw
        AAAI/wADCBxIsKBBgT16HFzIsGHDGRzkyOHQx6HFiwVVwEHCEQkcFRhDNqwRB8mCkwuQxKkhsmVBEilR
        oiThsmaAOSZlppxj86CaPlu2hBFUkENOmUg4FMyxZQodPWpC7gAxQQIECBlmELwTE6XJOwT3wCFA1gAF
        QBd/gLjKFoKFQAMFyeF4kqMcogJrLCAwgGxfCgod9rHa9uoWgn8svDn5xoINglP4kvVrII/FO4XZcmBD
        UE0YEiXCRB3440HfyZNBWNyS+eoczhfVxDmNmsAUi2FaQ7Aj0gJtvwQOOxSUIfOEiiHDGKA9YEASuBZp
        WGg7AWTLOgeaDzCAJExIQFs4zP+xo7VmGAtwHkxh2ZLN6J4BeryHT7++fYuB8pDYwmf+/UB1QBBHBn0E
        QRAfHFhgAQYY1AHdfTMgAcCEALhBk0B/zJEBBgpySAJs9QnyBoUUuuFdAHcsyCGHC/px3x0kkjhBAGrU
        oeCNC1pgmX1TxEghAoKwAUKHLCqox31z+DjhAURtUWSOGbhoH4xKUoDhHDgqSMIP94noYxsnBtDHFAwu
        aMeD9kVIooUF5VfCFjH4Z18gdgg4Bx/31WRgnnweFMSefV4kSBhB5YFWTYLUMMMMNXCJESAkgEAHCCDU
        EYNLgPCRhwuc8rFDWiVISseolf4hUg9hpMpCqnrMACJDfoTLIOqok1qHUQ2p5hGGHruG8alDYYRAK60g
        bOHoRX2wqseyeuRhKrCzUjqpFgYFQgMNgQAq0Ax5MMtqGM829IeoHFBKaZjx5bGFCSYIdWwAf+zK7LJD
        WcSGCpOKGgIJeAXARhjs3sGuu6TFIK+85VnUAx7CjmoCmn+wK3HAj8XFR6qpJnxREH/w4cIM7wbAx8AT
        m4Bnm3/8IYi29I0sscDsnhyoQTS0C7PEGs8clwolm6BCvzoTFAjPAd+RQ9ALCcIHC3nwATTSBoVcU0AA
        IfkEAQoAAQAsAAAAADAAMAAACP8AAwgcSLCgQYFq1BxcyLBhw0qMEiXCQsmhxYsFw1SAwBFChTAYQzb8
        s7Ejxwp/RKosCMmkyUcrYwZg5LIjI5kH2VSSFClGj4IhanK8SfASC0aNwqwJmUkLokNQF1kiyEIoBDAE
        JxlisGABg0SXLrLRArXsIUVhBfaY4tLQlJ8C/0Do2pXQgihwHz41C5UFwT+KDHE0pCjlQEYM7NL1GsOi
        JL5QETFiQ1BNDEiQyCgcuKYCocSLFzRyDPkQohCUL3b+zJUuA6INyZQ+BDOkoiOEFC+wK8lij0WQo1QS
        GaPQ58UT0jq0pMhsFJAi2TwyvnsBBDIhL0lixOjR1JgxFFX/qMDIsMggm3EGUJNavfv38AkGWbgjRiRJ
        k5bGH3iJ7IRFkxQ0CRYfFPjBI5jsF0AlSxAwwAAEHPHIfAFcEsIiBn6wyCP6vZeJIQ8S4OAARjQWAAsY
        Zqihee6xQASEIoo4wCEBrKGFigUuYuJ7i8To4wCFZBLEjTh+sKN7PfooYyEJgoHjIovYEJ8kLyo5o0CX
        MJJijpC0596HIcpY4kA0NJIhggoyOGKEtQ1U332TpLffJY4c8l9FCp6X557yvRdED3JipMYkMbAQQyYx
        scGCIbkhgudFO0TiyKRaaEGDSmwsMgQAnAJAhF8WsQGGI5CQOikkCYbEwqadcjrIGRb9wTHprLNiF5Ih
        rbaqhUU0zCrprEc61AMhuXaKCK+0mqpFGBS6+ccfOxSkBrHFApCIRXRKokWyl3JGSRguhBEGJR0GgEi1
        APRmURiObOurnJSA4YILYIARRn4DUUJEsUrk1dAakzwyKwvRuinuvPPaq9yJg7RaiJRMURLDJeUGEK+8
        CNP7aFxOJSKJvxbN12xB32YcLhgb+8nQHxgjbC+LfHJWqL3zsqBZzAddEkMYGMdQMM4G9WADGZNQAjLQ
        BXkpU0AAIfkEAQoAAwAsAAAAADAAMAAACP8ABwgcSLCgQYE+Sh1cyLBhQzOhrFgJZcahxYsFR3nC0Inj
        hlEYQzYMtIEjx46fzohcWTBPp5cvTeZhSXMAqI4mYYKqeTAIKT58ZvgoGApmzJehCmYSZSLFqB8hfaio
        48GDlROBCPLJmVMUwUoYIixZIiHEjotBVFixKtEDqEwDfZA4yrHOUIGBOkWAwJevFagOSYWQuJYwH4KB
        SJzEQCLrQBN7+/KNANIhn7aFqyYlWGpGnjwzFA4s9Smy5AgpLIoiTFizaIulMEiWfMJijcytZ4YkMbuv
        V4c+TrC16qEOKZEzJPTG0ONiDlBrrdapLFKFBNOdZoRcGipUnuM0aSj/9mTCscggQXgO/PFavfv38C1m
        orGHj5n28TOl+MSYRkFSKYRiwgkntNBcfAOcwckCCSSwwBIqDKRfKAQKGEoL6cHnQycMOsjgJpWNMqCF
        J5gQinnuibLAiiyu6MEAaVFYogk0huIffKC0uGKDnPiQ1ogndCfgje/lqCODnMAlooAEggLKifGp6CGD
        DL44gH4mUtidKPjx1AOHUyaQBHVmpOCkiQYiOIAZC3oIQYQEzVcfKYCpmYkKJZFQg5p89unnSj0cKNIP
        pIwySg2CnidKJ2N5UElIPewhSgt5tCCKSivVYYAAnBagyW/AjTKppS3oIUqiFvFRhAAGEOCqAEmg07hQ
        IKOKkocopu4ZUicCFFCAq5sSsFlDpLTgwrEu3ApaVEv06uqzBHxiUbHIumBrHtQJpN8GnqQA13rN+vps
        q1bIJ8qxepiaLngCjfIGAPAC8Ea2VhTA6rO96uZQJS6k628MdQayQLzxJmBeJQsQIMCrBlBwl0M/0HCu
        tTEkSgLBBNdBkChJEOBrAZywe5EPpNSA6WgRYBwvBAUFEsonVuTx8HtLqAzvEn8a5InNAGCQc0ExCKCy
        ANn+PAAJQscbAAlGGyTKBEUgMAGoTSuVSZ00BQQAIfkEAQoAAQAsAAAAADAAMAAACP8AAwgcSLCgQYFs
        2BxcyLBhQzQqVq36gsahxYsFK1358MHKhyuVMIpsiAkLx45WrGCpOLIlQTEpT6IU47JmABUxOaa0osLm
        QjSjRv35URBnTpQ9CQoapUIFK4UYf4iRKPELJoKUjqKkQdCGFShgoYAShHHqKlWrtmyJ1GPgj1U7da6C
        GgCNlUN4864i6hDNWapqV41SCmmnFUhkB0bKy/gQV4eU0m45GxhMQTY2xLiwQTdAkCuN8UL5YnGUZImV
        g2BkAzo0lEgW/0hWGzjGyFWhD0EhY5HNl8CSIbHEyCpKaCttLe6IBBgSK5cupEARbeU5RlejwHwRs8Mm
        K7hXVAz/F6nap9vy5tOrX3/RVatKrNB0Zt8DzBUrq/4U3KHZBRgXlMyX3h9TQGAgBKi4MFAP/bngoAuP
        recKFQceiIp1rDz44H+JqTeKBBUeSIJA2WnoIBj6rbdKiAdG8UMQo5j4YCvsQcKigVG0laGMLnSYHhmn
        3DhiAAz+pyEN6KU3IYuohCQQfxpS4gp7AqEhRYUJFuQefONRKYh9h6VI5ZhkKtlDkjX9wNdIo0BxxBES
        wFaTGFSgksoVYlr0hSlCAODnEFYI6JAqhRyxACELQMCbRa0U0aeffyZVViGILmDpAqd05xAJQjzqZ6en
        jERFpZciKilDUHgKKQBHTHnRD6iQtXrpAldYFIWqn7ZKUA9GqeAjG6nIeumQDUWCa5+HEFSJBKaYQoAp
        EjgpkAiHzmopTQ71oMSqAAhhCiUDobHEAAMQQAC5Swz3BwSzIuriRTYU8qgQRZyqyrnmmlsuKASNcsqs
        UXTZUA+RGIcFjQMFcUi5+eqbLEGYqCACCWK4uh4qDDc8ACplLkQFvvmWS0XHB41yRMbnHgEuyQatcjK5
        AxyxCssLxXBIIYUcYhvNDAkiCJotBQQAIfkEAQoAAQAsAAAAADAAMAAACP8AAwgcSLCgQYFBghxcyLBh
        Qx5jVuiJwcOhxYsFb+ExMYsjnlsYQzbMhWeWSY4m8FQUyZLgDBMcZ22ZuYVGy5sBxnTkSHPLGJwLefz5
        s2NNQZ0mZW6R+ZOgjxkuxvwxihEIjTAustbKRdBGx44zOdogiMtEiA4hQODhevGqnrcu9IyhGgCIHqUz
        Z+kBMpBHiRBnz4KgpdAhjzB6EGN1EeYPwVxhks4Kw1ZgGMBoqYAAQcexwz96sobOyqJWwSC4ZszAVRih
        2cwdQFCh07Thn8VZs4YxjTHIX8BpNdO2iAt37jC2RLKg06G5iBB0QvixGKQW3OOVL/55Dj06nRI+Lub/
        GkOaMa6WtQB7LwES45o/M2rZyi7yDwuYYVYCBZpwv/+Wrf2H3hxKSDDCeQI+FkNHK3g20AhuACAhAAjw
        liAuIhyi4SFTWBhGGxNOyIB+/q0hy4YbzjFWABOEGCIeCc6AAYobzhIADwi4OOEUCbJA44YiAMFDETpK
        yKOAPv54iAjhyVEkADAKKKOSNgagB4gujpigiT9OsWIAskQ4IRIWCoghih0WFAOBEIiAYIICjTeLLCy8
        CeedeO63hg8B3rQGXyzZ0sEmmxwSRp8Y1SLCHFOY0N5FYShAwACUFiFCS7RMAMGmEHRiE3ENUErAqAMU
        EYZIM2jK6aaxkLjQLJOO3yrrAIeIJMKqq57qUAcFyDprA+FdtMYcuG4qgQkW0dGrrwQUsAldAeTiQgmy
        UEbQGh0UC4EEVTbEggEDyFrAAAV00FUnDCygAAOdOBhACRIUK0GZC+UCS6zjDqBAcgLxIAcSSKgLsBz6
        4dJJsXRAy9AtsBggawN7EIQHEq8ssAASDCChQJQC1RJLvBJMQIerDfmwXAez2BlABwBbrDHA5hJ0GEe1
        KLzfHAAHnLECSMyR50KyYGzxxQooMMLPB83QQM4uK8Ev0gWxoETOSDTAAtQLzdCBHHJ0MAPWI9HXUkAA
        IfkEAQoAAQAsAAAAADAAMAAACP8AAwgcSLCgwYFBDipcyJBhjxp9+tTo0bCixYI7fLnQo8eFrx0XQzL8
        4auji5MsfP0QybLgGY4nY7o407JmgEowZbqoZPNgj0hzEGWhSbCGTJMuahRUc8sXjV8JL9pYAqAqAF0s
        CP7SGfMXQUwsVj16tErMyoo9lFi1SmDGQCAzdOpxO1BNJFWr8K5a5cJipLVrERH8ETfmDDUEaZDNyxiS
        14ZzAFtFgpjgjltngBUEwkLVI717H9FliEhyVSQUL3b+zNhzn4pZTAPYJTLG2NufH92qeEaX5CFZQ2KC
        lOVRluKqJFVuyMLU2iEfooakAQm3JJAXKx1CcmQXC+kif/n/YiGpz/KQPVL3DAB+vfuQ7d/Dr/SB1yFV
        j+XX7SMp0seCjxxBwAADmLIET/oFgMkjHzT4wRVKCeSLLgMQYCGBu2imHyQOOnjFY4hYKOKApkiinw0h
        dOhgVsAUUuGIppjygX6+qOjgIz+0+OKIBMwoX402fqAKEAH0suOFpgT3ng1BfhCcL0cQeOEAEKjnHhAc
        qvihQEEEOGCFByYYwA5ZNohFhAPNUN99+SWoxgySSPLfQUHEJ+adeBr0w3k2qUEkSzZcwQsvHfhiUw2P
        XHFFJG02FAMECyAhaSGP/BmSHr0coukhHaDJECYTRLpApEgUYmhINUSByKaafmClQpKIxDqqpEh0IBIk
        rG7ay2sNXTHqr7PyclZFalyR66aRVCQLsL8ikcqwAfwQAySQ+HIeEMYee4iSC/nCABLASnoFQbd0sAsE
        53ZAlEAsaNsLggypgYiskkKwm0DAdADBvvx2oGEAv3RwbBaWMvRLFLMusAuv7PLrsHdFfbDqIb1k8epI
        vshyxXUFXeGww+MS1IMvcdZQsHsffMxvCHkeBInK+z7SskG38KIyL/fOTJALNp8LAS996WwQDVj0EsUV
        owmtJ7Q1BQQAOw==
</value>
  </data>
</root>